function [c_hat, L_hat, m_hat] = estimateParameters(u_s, x_s, t_s, Lambda, g)

    N = length(t_s);  % Number of samples
    phi = zeros(N, 3);

    if size(x_s, 2) == 1
        % The derivative of the output is NOT available
        phi(:,1) = lsim(tf([-1, 0], Lambda), x_s, t_s);
        phi(:,2) = lsim(tf(-1, Lambda), x_s, t_s);
        phi(:,3) = lsim(tf(1, Lambda), u_s, t_s);
    
        % Estimate parameters using least squares method
        theta = (phi' * phi) \ (phi' * x_s);
        c_hat = (theta(1) + Lambda(1)) / theta(3);
        L_hat = g / (Lambda(2) + theta(2));
        m_hat = 1 / (theta(3) * L_hat^2);
    else
        % The derivative of the output is available
        phi(:,1) = lsim(tf(-1, Lambda), x_s(:,2), t_s);
        phi(:,2) = lsim(tf(-1, Lambda), x_s(:,1), t_s);
        phi(:,3) = lsim(tf(1, Lambda), u_s, t_s);

        % Estimate parameters using least squares method
        theta = (phi' * phi) \ (phi' * x_s(:,1));
        c_hat = (theta(1) + Lambda(1)) / theta(3);
        L_hat = g / (Lambda(2) + theta(2));
        m_hat = 1 / (theta(3) * L_hat^2);
    end
end